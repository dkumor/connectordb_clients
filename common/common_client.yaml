# This is a swagger client for ConnectorDB
# It is intended to be used to generate backend clients for Java/C#/ruby/...
# prettier frontends/examples may be needed for these.

swagger: '2.0'
info:
  title: ConnectorDB API
  description: Collecting data since 2015
  version: "1.0.0"
# the domain of the service
host: connectordb.com

securityDefinitions:
  standard:
    type: basic

security:
  - standard : []

# array of all schemes that your API supports
schemes:
  - https
# will be prefixed to all paths
basePath: /api/v1
produces:
  - application/json

paths:
  /crud/{username}:
    get:
      security:
      - standard : []
      summary: Fetch User
      description: |
        Fetches the user with the given name if it exists and you are
        authorized to see it.
      parameters:
      - name: username
        in: path
        required: true
        type: string
      produces:
        - application/json
      responses:
        200:
          description: The User
          schema:
            $ref: '#/definitions/User'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    post:
      security:
      - standard : []
      summary: Create User
      description: |
        Creates a user given the name, password and email address of the
        User object. The password must be in plaintext and will be converted
        on the backend to a hashed format using a one-way function and a
        salt.
      parameters:
      - name: username
        in: path
        required: true
        type: string
      - name: userinfo
        in: body
        required: true
        schema:
          $ref: '#/definitions/User'
      responses:
        200:
          description: User Created
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    put:
      security:
      - standard : []
      summary: Update User
      description: |
        Updates the user at the given path with the new JSON version
        in the body of the put.
      parameters:
      - name: username
        in: path
        required: true
        type: string
      - name: user
        in: body
        required: true
        schema:
          $ref: '#/definitions/User'
      responses:
        200:
          description: User Updated
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    delete:
      security:
      - standard : []
      summary: Removes a User
      parameters:
      - name: username
        in: path
        required: true
        type: string
      responses:
        200:
          description: User was Deleted
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'


  '/crud/{username}/{devicename}':
    get:
      security:
        - standard : []
      summary: Fetch Device
      description: |
        Fetches the device with the given name if it exists and you aure
        authorized to see it.
      parameters:
        - name: username
          in: path
          required: true
          type: string
        - name: devicename
          in: path
          required: true
          type: string
      responses:
        200:
          description: The Device
          schema:
            $ref: '#/definitions/Device'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    post:
      security:
        - standard : []
      summary: Create Device
      description: |
        Creates a device given a device with the name field filled out
      parameters:
        - name: newdevice
          in: body
          required: true
          schema:
            $ref: '#/definitions/Device'
        - name: username
          in: path
          required: true
          type: string
        - name: devicename
          in: path
          required: true
          type: string
      responses:
        200:
          description: Device Created
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    put:
      security:
        - standard : []
      summary: Update Device
      description: |
        Updates the device at the given path with the new JSON version
        in the body of the put.
      parameters:
        - name: device
          in: body
          required: true
          schema:
            $ref: '#/definitions/Device'
        - name: username
          in: path
          required: true
          type: string
        - name: devicename
          in: path
          required: true
          type: string

      responses:
        200:
          description: Device Updated
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    delete:
      security:
        - standard : []
      summary: Removes a Device
      parameters:
        - name: username
          in: path
          required: true
          type: string
        - name: devicename
          in: path
          required: true
          type: string
      responses:
        200:
          description: Device was Deleted
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'




  '/crud/{username}/{devicename}/{streamname}':
    get:
      security:
        - standard : []
      summary: Fetch Stream
      description: |
        Fetches the stream with the given name if it exists and you are
        authorized to see it.
      responses:
        200:
          description: The Stream
          schema:
            $ref: '#/definitions/Stream'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
      parameters:
        - name: username
          in: path
          required: true
          type: string
        - name: devicename
          in: path
          required: true
          type: string
        - name: streamname
          in: path
          required: true
          type: string
    post:
      security:
        - standard : []
      summary: Create Stream
      description: |
        Creates a stream given the name and type fields filled out
      parameters:
        - name: username
          in: path
          required: true
          type: string
        - name: devicename
          in: path
          required: true
          type: string
        - name: streamname
          in: path
          required: true
          type: string
        - name: newStream
          in: body
          required: true
          schema:
            $ref: '#/definitions/Stream'
      responses:
        200:
          description: Device Created
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    put:
      security:
        - standard : []
      summary: Update Stream
      description: |
        Updates the stream at the given path with the new JSON version
        in the body of the put.
      parameters:
        - name: stream
          in: body
          required: true
          schema:
            $ref: '#/definitions/Stream'
        - name: username
          in: path
          required: true
          type: string
        - name: devicename
          in: path
          required: true
          type: string
        - name: streamname
          in: path
          required: true
          type: string
      responses:
        200:
          description: Stream Updated
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    delete:
      security:
        - standard : []
      summary: Removes a Stream
      parameters:
        - name: username
          in: path
          required: true
          type: string
        - name: devicename
          in: path
          required: true
          type: string
        - name: streamname
          in: path
          required: true
          type: string
      responses:
        200:
          description: Stream was Deleted
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
'/crud/{username}/{devicename}/{streamname}/data':
    put:
        security:
            - standard : []
        summary: Appends data to the stream. If timestamps are out of range, then they are corrected.
        parameters:
          - name: data
            in: body
            required: true
            schema:
              $ref: '#/definitions/Data'
          - name: username
            in: path
            required: true
            type: string
          - name: devicename
            in: path
            required: true
            type: string
          - name: streamname
            in: path
            required: true
            type: string
        responses:
          200:
            description: Insert succeeded
          default:
            description: Unexpected error
            schema:
              $ref: '#/definitions/Error'
definitions:
  Error:
    properties:
      code:
        type: string
      message:
        type: string

  User:
    properties:
      userId:
        type: integer
        format: int64
        description: The user identifier
      name:
        type: string
      email:
        type: string
      password:
        type: string
      admin:
        type: boolean
      nickname:
        type: string

  Device:
    properties:
      deviceid:
        type: integer
      name:
        type: string
      nickname:
        type: string
      userid:
        type: integer
      apikey:
        type: string
      enabled:
        type: boolean
      admin:
        type: boolean
      canwrite:
        type: boolean
      user:
        type: boolean
      visible:
        type: boolean

  Stream:
    properties:
      streamid:
        type: integer
      name:
        type: string
      nickname:
        type: string
      type:
        type: string
      deviceid:
        type: integer
      ephemeral:
        type: boolean
      downlink:
        type: boolean

  Data:
    type: array
    items:
      type: object
      properties:
        d:
          description: The datapoint to insert (based upon the json schema of the stream)
        t:
          type: number
          description: The unix timestamp of the datapoint
